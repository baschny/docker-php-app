name: "Deploy Image to DockerHub"

on:
  push:
    branches:
      - master

jobs:
  # Build a docker image for a specific version and using a given target
  build_and_push:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - php-version: 7.4
            node-version: 14

    steps:
      -
        name: "Checkout Sourcecode"
        uses: actions/checkout@v2

      -
        name: "Set up Docker Buildx"
        id: builder
        uses: docker/setup-buildx-action@v1


      - name: "Append ARM buildx builder from AWS"
        shell: bash
        run: |
          # Do not check hostkey (for now)
          mkdir -p ~/.ssh
          cat <<EOF > ~/.ssh/config
          Host *
             StrictHostKeyChecking no
             UserKnownHostsFile=/dev/null
          EOF

          # Load ssh key allowing access to the remote docker
          eval $(ssh-agent -s)
          ssh-add <(echo "${{ secrets.SSH_PRIVATE_KEY }}")
          ssh-add -l
          docker -H ssh://ec2-user@arm.d.cron.eu info

          # Append the arm node to the builder
          docker buildx create --append --name ${{ steps.builder.outputs.name }} \
              --node aws_graviton \
              --platform linux/arm64 \
              ssh://ec2-user@arm.d.cron.eu

      -
        name: "Cache Docker layers"
        uses: actions/cache@v2
        with:
          path: .buildx-cache
          key: ${{ runner.os }}-buildx-${{ matrix.php-version }}-${{ matrix.node-version }}-${{ github.sha }}
          restore-keys: |
            "${{ runner.os }}-buildx-${{ matrix.php-version }}-${{ matrix.node-version }}-"
            "${{ runner.os }}-buildx-${{ matrix.php-version }}-"
            "${{ runner.os }}-buildx-"

      -
        name: "Login to DockerHub"
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      -
        name: "Docker build and push php-${{ matrix.php-version }} node-${{ matrix.node-version }}"
        run: make build-php PUSH=--push PHP_VERSION=${{ matrix.php-version }} NODE_VERSION=${{ matrix.node-version }}
